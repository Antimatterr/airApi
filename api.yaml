swagger: "2.0"
info:
  title: AIR api
  description: The AIR api consist api related to air application's online functionality
  version: 1.0
  contact:
    email: sidhant@thelattice.in
  server:
    url: "http://localhost:5000"
    description: "DEVELOPMENT SERVER"
    url: "http://157.245.100.190"
    description: "PRODUCTION SERVER"

schemes: [http, https]

# securityDefinitions:
  # BasicAuth:
  #   type: basic
  # JWT:
  #   description:
  #   type: apiKey
  #   name: Authorization
  #   in: header

host: localhost:5000
basePath: /api
paths:
  
  /register: 
    post:
      summary: create user profile
      produces:
        - application/json
      consumes:
        - application/json
      parameters: 
        - in: body
          name: user
          schema:
            type: object
            properties:
              uid: 
                type: integer
              username:
                type: string
              role:
                type: string
              pin:
                type: number
        
      responses:
        201:
          description: User profile created
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string

        422:
          description: validation error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
        409:
          description: duplicate entry
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
  /removeUser: 
    post:
      summary: remove user profile
      produces:
        - application/json
      consumes:
        - application/json
      parameters: 
        - in: body
          name: user
          schema:
            type: object
            properties:
              uid: 
                type: integer
        
      responses:
        201:
          description: User profile removed
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string

        422:
          description: validation error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
        409:
          description: profile does not exist
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
  /users: 
    get:
      summary: Get all users who are not removed
      produces:
        - application/json
      responses:
        200:
          description: user details
          schema: 
            type: array
            items: 
              type: object
              properties: 
                uid:
                  type: number
                username:
                  type: string
                role: 
                  type: string
                pin:
                  type: string
                careated_at:
                  type: string
                updated_at: 
                  type: string
                
                      
        404:
          description: No user found
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string

  /users/{uid}:
    get:
      summary: return user data by uid
      description: This provides details provided user id as parameter
      parameters:
        - in: path
          name: uid
          schema:
            type: integer
          required: true
          description: The user id who's details are needed to be fetched 
      responses:
        200:
          description: Hospital details
          schema: 
            type: object
            properties:
              status:
                type: integer
              result:
                type: array
                items: 
                  type: object
                  properties: 
                    uid:
                      type: number
                    username:
                      type: string
                    role: 
                     type: string
                    pin:
                      type: string
                    careated_at:
                      type: string
                    updated_at: 
                      type: string

        404:
          description: Not found
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string

        400:
          description: Bad request.userid must be an integer
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string
        500:
          description: Internal server error
          schema:
            type: object
            properties: 
              status: 
                type: integer
              message:
                type: string


    
